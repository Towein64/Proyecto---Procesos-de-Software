/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vista;

import coneccion.Conexion;
import controlador.ControladorClientes;
import controlador.ControladorUsuario;
import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Cliente;
import static vista.GestionUsuarios.tablaUsuarios;

/**
 *
 * @author User
 */
public class GestionClientes extends javax.swing.JInternalFrame {

    /**
     * Creates new form interno4
     */
    public GestionClientes() {
        initComponents();
        this.CargarTablaClientes();
        this.setSize(new Dimension(680,300));
        this.setTitle("Gestion de Clientes");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaClientes = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaClientes);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 450, 180));
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 30, 160, 30));
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 80, 160, 30));
        getContentPane().add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 130, 160, 30));

        jButton1.setText("Actualizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 220, 100, 30));

        jButton2.setText("Eliminar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 220, 100, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       if (!jTextField1.getText().isEmpty() && !jTextField2.getText().isEmpty() && !jTextField3.getText().isEmpty()) {
    ControladorClientes controlClientes = new ControladorClientes();
    
    int id = obtenerIdDeLaTabla(); // Debes implementar esta función para obtener el ID del cliente seleccionado en la tabla

    if (id != -1) {
        // Crear un objeto Cliente con los datos actualizados
        Cliente clienteActualizado = new Cliente(id, jTextField1.getText().trim(), jTextField2.getText().trim(), jTextField3.getText().trim());

        if (controlClientes.actualizarCliente(clienteActualizado)) {
            JOptionPane.showMessageDialog(null, "Cliente Actualizado");
            jTextField1.setText("");
            jTextField2.setText("");
            jTextField3.setText("");
            this.CargarTablaClientes();
        } else {
            JOptionPane.showMessageDialog(null, "Error al actualizar el cliente");
        }
    } else {
        JOptionPane.showMessageDialog(null, "Seleccione un cliente de la tabla");
    }
} else {
    JOptionPane.showMessageDialog(null, "Ingrese nuevos datos para el cliente");
}



    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (!jTextField1.getText().isEmpty()) {
        ControladorClientes controlClientes = new ControladorClientes();
        int id = obtenerIdDeLaTabla(); // Debes implementar esta función para obtener el ID del cliente seleccionado en la tabla

        if (id != -1) {
            if (controlClientes.borrarCliente(id)) {
                JOptionPane.showMessageDialog(null, "Cliente Eliminado");
                jTextField1.setText("");
                this.CargarTablaClientes();
            } else {
                JOptionPane.showMessageDialog(null, "Error al eliminar el cliente");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un cliente de la tabla");
        }
    } else {
        JOptionPane.showMessageDialog(null, "Seleccione un cliente");
    }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTable tablaClientes;
    // End of variables declaration//GEN-END:variables

    private void CargarTablaClientes() {
    DefaultTableModel modelo = new DefaultTableModel();

    try (Connection con = Conexion.conectar()) {
        if (con != null) {
            String sql = "SELECT * FROM clientes";
            try (Statement st = con.createStatement(); ResultSet rs = st.executeQuery(sql)) {

                modelo.addColumn("ID");
                modelo.addColumn("Nombre");
                modelo.addColumn("Apellido");
                modelo.addColumn("Correo");

                while (rs.next()) {
                    Object[] fila = new Object[4];
                    for (int i = 0; i < 4; i++) {
                        fila[i] = rs.getObject(i + 1);
                    }

                    modelo.addRow(fila);
                }

                tablaClientes.setModel(modelo);
            }
        }
    } catch (SQLException e) {
        System.out.println("Error al llenar la tabla de clientes: " + e);
    }

    tablaClientes.addMouseListener(new MouseAdapter() {
        @Override
        public void mouseClicked(MouseEvent e) {
            int fila = tablaClientes.rowAtPoint(e.getPoint());
            int columna = 0; // Suponemos que la primera columna contiene el ID del cliente.

            if (fila > -1) {
                int idCliente = (int) modelo.getValueAt(fila, columna);
                EnviarDatosClientesSeleccionados(idCliente);
            }
        }
    });
}

private void EnviarDatosClientesSeleccionados(int idCliente) {
    try {
        Connection con = Conexion.conectar();
        String sql = "SELECT * FROM clientes WHERE id = ?";
        PreparedStatement pst = con.prepareStatement(sql);
        pst.setInt(1, idCliente); // Establece el valor del parámetro en la consulta

        ResultSet rs = pst.executeQuery();

        while (rs.next()) {
            String nombre = rs.getString("nombre");
            String apellido = rs.getString("apellido");
            String correo = rs.getString("correo");

            // Actualiza los campos de texto con los datos del cliente seleccionado
            jTextField1.setText(nombre);
            jTextField2.setText(apellido);
            jTextField3.setText(correo);
        }

        rs.close();
        pst.close();
        con.close();
    } catch (SQLException e) {
        e.printStackTrace();
    }
}

private int obtenerIdDeLaTabla() {
    int filaSeleccionada = tablaClientes.getSelectedRow(); // Obtén la fila seleccionada
    if (filaSeleccionada != -1) {
        DefaultTableModel modelo = (DefaultTableModel) tablaClientes.getModel();
        int id = (int) modelo.getValueAt(filaSeleccionada, 0);
        return id;
    }
    return -1;
}


}
